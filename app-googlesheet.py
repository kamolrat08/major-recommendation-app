import streamlit as st
import graphviz
import pandas as pd
import plotly.express as px
import gspread
from datetime import datetime

# --- 1. ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö ---
st.set_page_config(page_title="‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏™‡∏≤‡∏Ç‡∏≤‡∏ß‡∏¥‡∏ä‡∏≤", page_icon="üéì", layout="wide")

# --- 2. ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö Google Sheets (‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏´‡∏°‡πà‡∏î‡πâ‡∏ß‡∏¢ gspread) ---
try:
    # ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• credentials ‡∏à‡∏≤‡∏Å st.secrets
    creds = st.secrets["connections"]["gsheets"]
    # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠
    gc = gspread.service_account_from_dict(creds)
    # ‡πÄ‡∏õ‡∏¥‡∏î Google Sheet ‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤ (‡πÉ‡∏ä‡πâ‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡∏ï‡∏±‡πâ‡∏á‡πÑ‡∏ß‡πâ)
    sh = gc.open("MajorAppData")
    # ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å worksheet (‡πÅ‡∏ó‡πá‡∏ö) ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ (‡∏õ‡∏Å‡∏ï‡∏¥‡∏Ñ‡∏∑‡∏≠ Sheet1)
    worksheet = sh.worksheet("Sheet1")
except Exception as e:
    st.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö Google Sheets:")
    st.error(e)
    st.stop()

# --- 3. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏•‡∏±‡∏Å‡∏î‡πâ‡∏≤‡∏ô‡∏ã‡πâ‡∏≤‡∏¢ ---
st.sidebar.title("‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏•‡∏±‡∏Å")
menu_choice = st.sidebar.selectbox(
    "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏°‡∏ô‡∏π‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£:",
    ("Dashboard ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•", "‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à", "‡πÉ‡∏´‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏™‡∏≤‡∏Ç‡∏≤")
)

# --- 4. ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡∏≤‡∏°‡πÄ‡∏°‡∏ô‡∏π‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å ---

# ==============================================================================
#  ‡∏´‡∏ô‡πâ‡∏≤ DASHBOARD
# ==============================================================================
if menu_choice == "Dashboard ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•":
    st.title("üìä Dashboard ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏• (‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á)")
    st.write("‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤‡∏ó‡∏≥‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö")

    # --- ‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á‡∏à‡∏≤‡∏Å Google Sheets ---
    data = worksheet.get_all_records()
    df = pd.DataFrame(data)

    if df.empty:
        st.warning("‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤ '‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•")
    else:
        # --- ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏• Dashboard ---
        st.header("‡∏™‡∏£‡∏∏‡∏õ‡∏™‡∏≤‡∏Ç‡∏≤‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏°‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î")
        major_counts = df['Recommended_Major'].value_counts().reset_index()
        major_counts.columns = ['‡∏™‡∏≤‡∏Ç‡∏≤‡∏ß‡∏¥‡∏ä‡∏≤', '‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ']
        
        fig_bar = px.bar(major_counts, x='‡∏™‡∏≤‡∏Ç‡∏≤‡∏ß‡∏¥‡∏ä‡∏≤', y='‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ', title="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏™‡∏≤‡∏Ç‡∏≤", color='‡∏™‡∏≤‡∏Ç‡∏≤‡∏ß‡∏¥‡∏ä‡∏≤', text_auto=True)
        st.plotly_chart(fig_bar, use_container_width=True)

        st.header("‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏à‡∏≤‡∏¢‡∏ï‡∏±‡∏ß‡∏Ç‡∏≠‡∏á‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô")
        col1, col2, col3 = st.columns(3)
        with col1:
            st.subheader("‡πÄ‡∏Å‡∏£‡∏î‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏£‡∏ß‡∏°")
            fig_pie_total = px.pie(df, names='Total_Grade', title='‡∏™‡∏±‡∏î‡∏™‡πà‡∏ß‡∏ô‡πÄ‡∏Å‡∏£‡∏î‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏£‡∏ß‡∏°')
            st.plotly_chart(fig_pie_total, use_container_width=True)
        with col2:
            st.subheader("‡πÄ‡∏Å‡∏£‡∏î‡∏ß‡∏¥‡∏ä‡∏≤‡πÄ‡∏≠‡∏Å")
            fig_pie_major = px.pie(df, names='Major_Grade', title='‡∏™‡∏±‡∏î‡∏™‡πà‡∏ß‡∏ô‡πÄ‡∏Å‡∏£‡∏î‡∏ß‡∏¥‡∏ä‡∏≤‡πÄ‡∏≠‡∏Å')
            st.plotly_chart(fig_pie_major, use_container_width=True)
        with col3:
            st.subheader("‡πÄ‡∏Å‡∏£‡∏î‡∏ß‡∏¥‡∏ä‡∏≤‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à")
            fig_pie_business = px.pie(df, names='Business_Grade', title='‡∏™‡∏±‡∏î‡∏™‡πà‡∏ß‡∏ô‡πÄ‡∏Å‡∏£‡∏î‡∏ß‡∏¥‡∏ä‡∏≤‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à')
            st.plotly_chart(fig_pie_business, use_container_width=True)

        st.header("‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î")
        st.dataframe(df.sort_values(by="Timestamp", ascending=False))

# ==============================================================================
#  ‡∏´‡∏ô‡πâ‡∏≤ ‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö
# ==============================================================================
elif menu_choice == "‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à":
    st.title("üìù ‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à")
    st.write("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏î‡πâ‡∏≤‡∏ô ‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à‡πÅ‡∏•‡∏∞‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå")
    
    with st.sidebar.form(key='recommendation_form'):
        st.header("‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà")
        total_grade = st.radio("1. ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏£‡∏ß‡∏°", ["‡∏î‡∏µ", "‡πÑ‡∏°‡πà‡∏î‡∏µ"], key="total")
        major_grade = st.radio("2. ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÉ‡∏ô‡∏ß‡∏¥‡∏ä‡∏≤‡πÄ‡∏≠‡∏Å", ["‡∏î‡∏µ", "‡πÑ‡∏°‡πà‡∏î‡∏µ"], key="major")
        business_grade = st.radio("3. ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÉ‡∏ô‡∏ß‡∏¥‡∏ä‡∏≤‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à", ["‡∏î‡∏µ", "‡πÑ‡∏°‡πà‡∏î‡∏µ"], key="business")
        submit_button = st.form_submit_button(label='‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥')

    if submit_button:
        # --- ‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏£‡∏£‡∏Å‡∏∞‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à (Logic) ---
        result_text = ""
        if total_grade == "‡πÑ‡∏°‡πà‡∏î‡∏µ":
            if major_grade == "‡πÑ‡∏°‡πà‡∏î‡∏µ":
                if business_grade == "‡πÑ‡∏°‡πà‡∏î‡∏µ": result_text = "‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£"
                else: result_text = "‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå"
            else: result_text = "‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå"
        else:
            if major_grade == "‡πÑ‡∏°‡πà‡∏î‡∏µ": result_text = "‡∏Å‡∏≤‡∏£‡πÇ‡∏£‡∏á‡πÅ‡∏£‡∏°"
            else:
                if business_grade == "‡πÑ‡∏°‡πà‡∏î‡∏µ": result_text = "‡∏Å‡∏≤‡∏£‡πÇ‡∏£‡∏á‡πÅ‡∏£‡∏°"
                else: result_text = "‡∏Å‡∏≤‡∏£‡∏ï‡∏•‡∏≤‡∏î"
        
        # --- ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏á Google Sheets (‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏´‡∏°‡πà) ---
        try:
            timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
            # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ñ‡∏ß‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà‡∏ï‡∏≤‡∏°‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÉ‡∏ô Sheet
            new_row = [timestamp, total_grade, major_grade, business_grade, result_text]
            # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÅ‡∏ñ‡∏ß‡πÉ‡∏´‡∏°‡πà‡∏ï‡πà‡∏≠‡∏ó‡πâ‡∏≤‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏î‡∏¥‡∏°
            worksheet.append_row(new_row, value_input_option='USER_ENTERED')
            st.sidebar.success("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!")
        except Exception as e:
            st.sidebar.error(f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•: {e}")

        st.header("‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì:")
# --- ‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏• Graphviz ---
    # --- ‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏• Graphviz (‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡πÇ‡∏´‡∏ô‡∏î) ---
        dot = graphviz.Digraph(comment='Decision Tree')
        dot.attr('node', style='rounded,filled', fontname='Tahoma') # ‡πÄ‡∏û‡∏¥‡πà‡∏° font ‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢

        # ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÇ‡∏´‡∏ô‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô "‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°" (‡∏ó‡∏£‡∏á‡∏£‡∏µ)
        dot.node('A', '‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏ß‡∏°', shape='ellipse')
        dot.node('B', '‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ß‡∏¥‡∏ä‡∏≤‡πÄ‡∏≠‡∏Å', shape='ellipse')
        dot.node('C', '‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ß‡∏¥‡∏ä‡∏≤‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à', shape='ellipse')
        
        # ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÇ‡∏´‡∏ô‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô "‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö" (‡∏™‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏µ‡πà‡∏¢‡∏°)
        dot.node('D', '‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå', shape='box')
        dot.node('E', '‡∏Å‡∏≤‡∏£‡πÇ‡∏£‡∏á‡πÅ‡∏£‡∏°', shape='box')
        dot.node('F', '‡∏Å‡∏≤‡∏£‡∏ï‡∏•‡∏≤‡∏î', shape='box')
        dot.node('G', '‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£', shape='box')

        # ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏™‡∏µ
        active_color = "#4CAF50"  # ‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
        default_color = "grey"

        # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏™‡πâ‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°)
        dot.edge('A', 'B', label='‡∏î‡∏µ', color=default_color)
        dot.edge('A', 'B', label='‡πÑ‡∏°‡πà‡∏î‡∏µ', color=default_color)
        dot.edge('B', 'C', label='‡∏î‡∏µ', color=default_color)
        dot.edge('B', 'E', label='‡πÑ‡∏°‡πà‡∏î‡∏µ', color=default_color)
        dot.edge('B', 'D', label='‡∏î‡∏µ', color=default_color)
        dot.edge('B', 'C', label='‡πÑ‡∏°‡πà‡∏î‡∏µ', color=default_color)
        dot.edge('C', 'F', label='‡∏î‡∏µ', color=default_color)
        dot.edge('C', 'E', label='‡πÑ‡∏°‡πà‡∏î‡∏µ', color=default_color)
        dot.edge('C', 'D', label='‡∏î‡∏µ', color=default_color)
        dot.edge('C', 'G', label='‡πÑ‡∏°‡πà‡∏î‡∏µ', color=default_color)

        # ‡πÑ‡∏Æ‡πÑ‡∏•‡∏ó‡πå‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°)
        if total_grade == "‡πÑ‡∏°‡πà‡∏î‡∏µ":
            dot.edge('A', 'B', label='‡πÑ‡∏°‡πà‡∏î‡∏µ', color=active_color)
            if major_grade == "‡πÑ‡∏°‡πà‡∏î‡∏µ":
                dot.edge('B', 'C', label='‡πÑ‡∏°‡πà‡∏î‡∏µ', color=active_color)
                if business_grade == "‡πÑ‡∏°‡πà‡∏î‡∏µ":
                    dot.edge('C', 'G', label='‡πÑ‡∏°‡πà‡∏î‡∏µ', color=active_color)
                else: # business_grade == "‡∏î‡∏µ"
                    dot.edge('C', 'D', label='‡∏î‡∏µ', color=active_color)
            else: # major_grade == "‡∏î‡∏µ"
                dot.edge('B', 'D', label='‡∏î‡∏µ', color=active_color)
        else: # total_grade == "‡∏î‡∏µ"
            dot.edge('A', 'B', label='‡∏î‡∏µ', color=active_color)
            if major_grade == "‡πÑ‡∏°‡πà‡∏î‡∏µ":
                dot.edge('B', 'E', label='‡πÑ‡∏°‡πà‡∏î‡∏µ', color=active_color)
            else: # major_grade == "‡∏î‡∏µ"
                dot.edge('B', 'C', label='‡∏î‡∏µ', color=active_color)
                if business_grade == "‡πÑ‡∏°‡πà‡∏î‡∏µ":
                    dot.edge('C', 'E', label='‡πÑ‡∏°‡πà‡∏î‡∏µ', color=active_color)
                else: # business_grade == "‡∏î‡∏µ"
                    dot.edge('C', 'F', label='‡∏î‡∏µ', color=active_color)
        
        st.graphviz_chart(dot)     

# ==============================================================================
#  ‡∏´‡∏ô‡πâ‡∏≤ ‡πÉ‡∏´‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ
# ==============================================================================
elif menu_choice == "‡πÉ‡∏´‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏™‡∏≤‡∏Ç‡∏≤":
    st.title("üìö ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏™‡∏≤‡∏Ç‡∏≤")
    st.write("‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡∏à‡∏±‡∏Å‡∏Å‡∏±‡∏ö‡∏™‡∏≤‡∏Ç‡∏≤‡∏ß‡∏¥‡∏ä‡∏≤‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì")

    st.header("üíª ‡∏™‡∏≤‡∏Ç‡∏≤‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå (Computer)")
    st.write("...") # (‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÄ‡∏î‡∏¥‡∏°)
    st.header("üè® ‡∏™‡∏≤‡∏Ç‡∏≤‡∏Å‡∏≤‡∏£‡πÇ‡∏£‡∏á‡πÅ‡∏£‡∏° (Hotel)")
    st.write("...") # (‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÄ‡∏î‡∏¥‡∏°)
    st.header("üìà ‡∏™‡∏≤‡∏Ç‡∏≤‡∏Å‡∏≤‡∏£‡∏ï‡∏•‡∏≤‡∏î (Marketing)")
    st.write("...") # (‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÄ‡∏î‡∏¥‡∏°)
    st.header("üëî ‡∏™‡∏≤‡∏Ç‡∏≤‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ (Management)")
    st.write("...") # (‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÄ‡∏î‡∏¥‡∏°)